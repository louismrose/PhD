\contentsline {lstlisting}{\numberline {2.1}Exemplar M2M transformation in the Epsilon Transformation Language \cite {kolovos08etl}}{17}
\contentsline {lstlisting}{\numberline {2.2}Exemplar M2T transformation in the Epsilon Generation Language \cite {rose08egl}}{19}
\contentsline {lstlisting}{\numberline {2.3}Exemplar T2M transformation in EMFtext}{20}
\contentsline {lstlisting}{\numberline {2.4}Exemplar model validation in the Epsilon Validation Language}{21}
\contentsline {lstlisting}{\numberline {4.1}Migration strategy for the refactoring in pseudo code.}{75}
\contentsline {lstlisting}{\numberline {5.1}Exemplar person model in XMI}{94}
\contentsline {lstlisting}{\numberline {5.2}Specifying attributes with HUTN.}{101}
\contentsline {lstlisting}{\numberline {5.3}Instantiation of naturalChildren -- a HUTN containment reference.}{101}
\contentsline {lstlisting}{\numberline {5.4}Specifying a simple reference with HUTN.}{101}
\contentsline {lstlisting}{\numberline {5.5}Using keywords and adjectives in HUTN.}{102}
\contentsline {lstlisting}{\numberline {5.6}Referencing objects in other packages with HUTN.}{102}
\contentsline {lstlisting}{\numberline {5.7}Using a reference block in HUTN.}{103}
\contentsline {lstlisting}{\numberline {5.8}Using an infix reference in HUTN.}{103}
\contentsline {lstlisting}{\numberline {5.9}Transformation rule (in ETL) to convert AST nodes to package objects.}{105}
\contentsline {lstlisting}{\numberline {5.10}A constraint (in EVL) to check that all identifiers are unique.}{106}
\contentsline {lstlisting}{\numberline {5.11}Part of the M2T transformation (in EGL) for generating the intermediate model to target model transformation (in ETL).}{107}
\contentsline {lstlisting}{\numberline {5.12}The M2M transformation generated by HUTN for the Families metamodel}{108}
\contentsline {lstlisting}{\numberline {5.13}HUTN for people with mothers and fathers.}{109}
\contentsline {lstlisting}{\numberline {5.14}HUTN for people with parents.}{110}
\contentsline {lstlisting}{\numberline {5.15}Failure behaviour specified in HUTN.}{110}
\contentsline {lstlisting}{\numberline {5.16}Fragment of the Petri nets model migration in ATL}{114}
\contentsline {lstlisting}{\numberline {5.18}Petri nets model migration in COPE}{118}
\contentsline {lstlisting}{\numberline {5.19}Concrete syntax of migrate and delete rules.}{121}
\contentsline {lstlisting}{\numberline {5.20}Redefining equivalences for the Component model migration.}{125}
\contentsline {lstlisting}{\numberline {5.21}Petri nets model migration in Flock}{126}
\contentsline {lstlisting}{\numberline {5.22}UML model migration in Flock}{127}
\contentsline {lstlisting}{\numberline {6.1}Assignment operators in ATL}{152}
\contentsline {lstlisting}{\numberline {6.2}The Petri nets model migration in ATL}{155}
\contentsline {lstlisting}{\numberline {6.3}The Petri nets model migration in Groovy-for-COPE}{156}
\contentsline {lstlisting}{\numberline {6.4}Petri nets model migration in Flock}{156}
\contentsline {lstlisting}{\numberline {6.5}An extract of the GMF Graph model migration in ATL}{159}
\contentsline {lstlisting}{\numberline {6.6}Simplified GMF Graph model migration in ATL}{162}
\contentsline {lstlisting}{\numberline {6.7}Simplified GMF Graph model migration in COPE}{162}
\contentsline {lstlisting}{\numberline {6.8}Simplified GMF Graph model migration in Flock}{163}
\contentsline {lstlisting}{\numberline {6.9}Migration for Change Reference to Containment in ATL}{165}
\contentsline {lstlisting}{\numberline {6.10}Migration for Change Reference to Containment in Flock}{166}
\contentsline {lstlisting}{\numberline {6.11}Migrating Actions}{190}
\contentsline {lstlisting}{\numberline {6.12}Migrating FinalStates and Transitions}{190}
\contentsline {lstlisting}{\numberline {6.13}Migrating Pseudostates}{190}
\contentsline {lstlisting}{\numberline {6.14}Migrating ActivityGraphs}{190}
\contentsline {lstlisting}{\numberline {6.15}Migrating Guards}{191}
\contentsline {lstlisting}{\numberline {6.16}Migrating Partitions}{191}
\contentsline {lstlisting}{\numberline {6.17}Migrating ObjectFlows}{192}
\contentsline {lstlisting}{\numberline {6.18}Migrating ObjectFlowStates to a single ObjectFlow}{192}
\contentsline {lstlisting}{\numberline {6.19}Migrating Partitions without ObjectFlowStates}{192}
\contentsline {lstlisting}{\numberline {B.1}The annotated process-oriented metamodel after the first iteration}{212}
\contentsline {lstlisting}{\numberline {B.2}The annotated process-oriented metamodel after the second iteration}{213}
\contentsline {lstlisting}{\numberline {B.3}The annotated process-oriented metamodel after the fourth iteration}{217}
\contentsline {lstlisting}{\numberline {B.4}The annotated process-oriented metamodel after the fifth iteration}{221}
\contentsline {lstlisting}{\numberline {B.5}The annotated process-oriented metamodel after the final iteration}{225}
\contentsline {lstlisting}{\numberline {C.1}The Newsgroup Extract Person model migration in ATL}{228}
\contentsline {lstlisting}{\numberline {C.2}The Newsgroup Extract Person model migration in Groovy-for-COPE}{229}
\contentsline {lstlisting}{\numberline {C.3}The Newsgroup Extract Person model migration in Flock}{229}
\contentsline {lstlisting}{\numberline {C.4}The Newsgroup Resolve Replies model migration in ATL}{230}
\contentsline {lstlisting}{\numberline {C.5}The Newsgroup Resolve Replies model migration in Groovy-for-COPE}{231}
\contentsline {lstlisting}{\numberline {C.6}The Newsgroup Resolve Replies model migration in Flock}{231}
\contentsline {lstlisting}{\numberline {C.7}UML activity diagram model migration in ATL}{232}
\contentsline {lstlisting}{\numberline {C.8}UML activity diagram model migration in Groovy-for-COPE}{236}
\contentsline {lstlisting}{\numberline {C.9}UML activity diagram model migration in Flock}{237}
\contentsline {lstlisting}{\numberline {C.10}GMF Graph model migration in ATL}{239}
\contentsline {lstlisting}{\numberline {C.11}GMF Graph model migration in Groovy-for-COPE}{251}
\contentsline {lstlisting}{\numberline {C.12}GMF Graph model migration in Flock}{252}
\contentsline {lstlisting}{\numberline {C.13}GMF Generator model migration in ATL}{253}
\contentsline {lstlisting}{\numberline {C.14}GMF Generator model migration in Groovy-for-COPE}{278}
\contentsline {lstlisting}{\numberline {C.15}GMF Generator model migration in Flock}{280}
