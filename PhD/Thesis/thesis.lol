\contentsline {lstlisting}{\numberline {2.1}Exemplar M2M transformation in the Epsilon Transformation Language \cite {kolovos08etl}}{17}{lstlisting.2.1}
\contentsline {lstlisting}{\numberline {2.2}Exemplar M2T transformation in the Epsilon Generation Language \cite {rose08egl}}{19}{lstlisting.2.2}
\contentsline {lstlisting}{\numberline {2.3}Exemplar T2M transformation in EMFtext}{20}{lstlisting.2.3}
\contentsline {lstlisting}{\numberline {2.4}Exemplar model validation in the Epsilon Validation Language}{21}{lstlisting.2.4}
\contentsline {lstlisting}{\numberline {4.1}Migration strategy for the refactoring in pseudo code.}{75}{lstlisting.4.1}
\contentsline {lstlisting}{\numberline {5.1}Exemplar person model in XMI}{94}{lstlisting.5.1}
\contentsline {lstlisting}{\numberline {5.2}Specifying attributes with HUTN.}{101}{lstlisting.5.2}
\contentsline {lstlisting}{\numberline {5.3}Instantiation of naturalChildren -- a HUTN containment reference.}{101}{lstlisting.5.3}
\contentsline {lstlisting}{\numberline {5.4}Specifying a simple reference with HUTN.}{101}{lstlisting.5.4}
\contentsline {lstlisting}{\numberline {5.5}Using keywords and adjectives in HUTN.}{102}{lstlisting.5.5}
\contentsline {lstlisting}{\numberline {5.6}Referencing objects in other packages with HUTN.}{102}{lstlisting.5.6}
\contentsline {lstlisting}{\numberline {5.7}Using a reference block in HUTN.}{103}{lstlisting.5.7}
\contentsline {lstlisting}{\numberline {5.8}Using an infix reference in HUTN.}{103}{lstlisting.5.8}
\contentsline {lstlisting}{\numberline {5.9}Transformation rule (in ETL) to convert AST nodes to package objects.}{105}{lstlisting.5.9}
\contentsline {lstlisting}{\numberline {5.10}A constraint (in EVL) to check that all identifiers are unique.}{106}{lstlisting.5.10}
\contentsline {lstlisting}{\numberline {5.11}Part of the M2T transformation (in EGL) for generating the intermediate model to target model transformation (in ETL).}{107}{lstlisting.5.11}
\contentsline {lstlisting}{\numberline {5.12}The M2M transformation generated by HUTN for the Families metamodel}{108}{lstlisting.5.12}
\contentsline {lstlisting}{\numberline {5.13}HUTN for people with mothers and fathers.}{109}{lstlisting.5.13}
\contentsline {lstlisting}{\numberline {5.14}HUTN for people with parents.}{110}{lstlisting.5.14}
\contentsline {lstlisting}{\numberline {5.15}Failure behaviour specified in HUTN.}{110}{lstlisting.5.15}
\contentsline {lstlisting}{\numberline {5.16}Fragment of the Petri nets model migration in ATL}{114}{lstlisting.5.16}
\contentsline {lstlisting}{\numberline {5.18}Petri nets model migration in COPE}{118}{lstlisting.5.18}
\contentsline {lstlisting}{\numberline {5.19}Concrete syntax of migrate and delete rules.}{121}{lstlisting.5.19}
\contentsline {lstlisting}{\numberline {5.20}Redefining equivalences for the Component model migration.}{126}{lstlisting.5.20}
\contentsline {lstlisting}{\numberline {5.21}Petri nets model migration in Flock}{127}{lstlisting.5.21}
\contentsline {lstlisting}{\numberline {5.22}UML model migration in Flock}{127}{lstlisting.5.22}
\contentsline {lstlisting}{\numberline {6.1}Assignment operators in ATL}{154}{lstlisting.6.1}
\contentsline {lstlisting}{\numberline {6.2}The Petri nets model migration in ATL}{157}{lstlisting.6.2}
\contentsline {lstlisting}{\numberline {6.3}The Petri nets model migration in Groovy-for-COPE}{158}{lstlisting.6.3}
\contentsline {lstlisting}{\numberline {6.4}Petri nets model migration in Flock}{158}{lstlisting.6.4}
\contentsline {lstlisting}{\numberline {6.5}An extract of the GMF Graph model migration in ATL}{161}{lstlisting.6.5}
\contentsline {lstlisting}{\numberline {6.6}Simplified GMF Graph model migration in ATL}{164}{lstlisting.6.6}
\contentsline {lstlisting}{\numberline {6.7}Simplified GMF Graph model migration in COPE}{164}{lstlisting.6.7}
\contentsline {lstlisting}{\numberline {6.8}Simplified GMF Graph model migration in Flock}{165}{lstlisting.6.8}
\contentsline {lstlisting}{\numberline {6.9}Migration for Change Reference to Containment in ATL}{167}{lstlisting.6.9}
\contentsline {lstlisting}{\numberline {6.10}Migration for Change Reference to Containment in Flock}{168}{lstlisting.6.10}
\contentsline {lstlisting}{\numberline {6.11}Migrating Actions}{192}{lstlisting.6.11}
\contentsline {lstlisting}{\numberline {6.12}Migrating FinalStates and Transitions}{192}{lstlisting.6.12}
\contentsline {lstlisting}{\numberline {6.13}Migrating Pseudostates}{192}{lstlisting.6.13}
\contentsline {lstlisting}{\numberline {6.14}Migrating ActivityGraphs}{192}{lstlisting.6.14}
\contentsline {lstlisting}{\numberline {6.15}Migrating Guards}{193}{lstlisting.6.15}
\contentsline {lstlisting}{\numberline {6.16}Migrating Partitions}{193}{lstlisting.6.16}
\contentsline {lstlisting}{\numberline {6.17}Migrating ObjectFlows}{194}{lstlisting.6.17}
\contentsline {lstlisting}{\numberline {6.18}Migrating ObjectFlowStates to a single ObjectFlow}{194}{lstlisting.6.18}
\contentsline {lstlisting}{\numberline {6.19}Migrating Partitions without ObjectFlowStates}{194}{lstlisting.6.19}
\contentsline {lstlisting}{\numberline {A.1}The annotated process-oriented metamodel after the first iteration}{210}{lstlisting.A.1}
\contentsline {lstlisting}{\numberline {A.2}The annotated process-oriented metamodel after the second iteration}{211}{lstlisting.A.2}
\contentsline {lstlisting}{\numberline {A.3}The annotated process-oriented metamodel after the fourth iteration}{215}{lstlisting.A.3}
\contentsline {lstlisting}{\numberline {A.4}The annotated process-oriented metamodel after the fifth iteration}{219}{lstlisting.A.4}
\contentsline {lstlisting}{\numberline {A.5}The annotated process-oriented metamodel after the final iteration}{223}{lstlisting.A.5}
\contentsline {lstlisting}{\numberline {B.1}The Newsgroup Extract Person model migration in ATL}{226}{lstlisting.B.1}
\contentsline {lstlisting}{\numberline {B.2}The Newsgroup Extract Person model migration in Groovy-for-COPE}{227}{lstlisting.B.2}
\contentsline {lstlisting}{\numberline {B.3}The Newsgroup Extract Person model migration in Flock}{227}{lstlisting.B.3}
\contentsline {lstlisting}{\numberline {B.4}The Newsgroup Resolve Replies model migration in ATL}{228}{lstlisting.B.4}
\contentsline {lstlisting}{\numberline {B.5}The Newsgroup Resolve Replies model migration in Groovy-for-COPE}{229}{lstlisting.B.5}
\contentsline {lstlisting}{\numberline {B.6}The Newsgroup Resolve Replies model migration in Flock}{229}{lstlisting.B.6}
\contentsline {lstlisting}{\numberline {B.7}UML activity diagram model migration in ATL}{230}{lstlisting.B.7}
\contentsline {lstlisting}{\numberline {B.8}UML activity diagram model migration in Groovy-for-COPE}{234}{lstlisting.B.8}
\contentsline {lstlisting}{\numberline {B.9}UML activity diagram model migration in Flock}{235}{lstlisting.B.9}
\contentsline {lstlisting}{\numberline {B.10}GMF Graph model migration in ATL}{237}{lstlisting.B.10}
\contentsline {lstlisting}{\numberline {B.11}GMF Graph model migration in Groovy-for-COPE}{249}{lstlisting.B.11}
\contentsline {lstlisting}{\numberline {B.12}GMF Graph model migration in Flock}{250}{lstlisting.B.12}
\contentsline {lstlisting}{\numberline {B.13}GMF Generator model migration in ATL}{251}{lstlisting.B.13}
\contentsline {lstlisting}{\numberline {B.14}GMF Generator model migration in Groovy-for-COPE}{276}{lstlisting.B.14}
\contentsline {lstlisting}{\numberline {B.15}GMF Generator model migration in Flock}{278}{lstlisting.B.15}
