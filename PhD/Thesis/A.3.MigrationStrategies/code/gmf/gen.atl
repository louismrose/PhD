module GenModel2009;

create Migrated : After from Original : Before;

rule GenEditorGenerator2GenEditorGenerator {
  from
    o : Before!GenEditorGenerator
  to
    m : After!GenEditorGenerator (
%\highlight%      audits <- o.audits,
%\highlight%      metrics <- o.metrics,
%\highlight%      diagram <- o.diagram,
%\highlight%      plugin <- o.plugin,
%\highlight%      editor <- o.editor,
%\highlight%      navigator <- o.navigator,
%\highlight%      diagramUpdater <- o.diagramUpdater,
%\highlight%      propertySheet <- o.propertySheet,
%\highlight%      application <- o.application,
%\highlight%      domainGenModel <- o.domainGenModel,
%\highlight%      packageNamePrefix <- o.packageNamePrefix,
%\highlight%      modelID <- o.modelID,
%\highlight%      sameFileForDiagramAndModel <- o.sameFileForDiagramAndModel,
%\highlight%      diagramFileExtension <- o.diagramFileExtension,
%\highlight%      domainFileExtension <- o.domainFileExtension,
%\highlight%      dynamicTemplates <- o.dynamicTemplates,
%\highlight%      templateDirectory <- o.templateDirectory,
%\highlight%      copyrightText <- o.copyrightText,
%\highlight%      expressionProviders <- o.expressionProviders,
%\highlight%      modelAccess <- o.modelAccess
    )
}
rule GenDiagram2GenDiagram extends GenContainerBase2GenContainerBase {
  from
    o : Before!GenDiagram
  to
    m : After!GenDiagram (
%\highlight%      domainDiagramElement <- o.domainDiagramElement,
%\highlight%      childNodes <- o.childNodes,
%\highlight%      topLevelNodes <- o.topLevelNodes,
%\highlight%      links <- o.links,
%\highlight%      compartments <- o.compartments,
%\highlight%      palette <- o.palette,
%\highlight%      synchronized <- o.synchronized,
%\highlight%      preferences <- o.preferences,
%\highlight%      preferencePages <- o.preferencePages
    )
}
rule GenEditorView2GenEditorView {
  from
    o : Before!GenEditorView
  to
    m : After!GenEditorView (
%\highlight%      packageName <- o.packageName,
%\highlight%      actionBarContributorClassName <- o.actionBarContributorClassName,
%\highlight%      className <- o.className,
%\highlight%      iconPath <- o.iconPath,
%\highlight%      iD <- o.iD,
%\highlight%      eclipseEditor <- o.eclipseEditor,
%\highlight%      contextID <- o.contextID
    )
}
abstract rule GenPreferencePage2GenPreferencePage {
  from
    o : Before!GenPreferencePage
  to
    m : After!GenPreferencePage (
%\highlight%      iD <- o.iD,
%\highlight%      name <- o.name,
%\highlight%      children <- o.children
    )
}
rule GenCustomPreferencePage2GenCustomPreferencePage extends GenPreferencePage2GenPreferencePage {
  from
    o : Before!GenCustomPreferencePage
  to
    m : After!GenCustomPreferencePage (
%\highlight%      qualifiedClassName <- o.qualifiedClassName
    )
}
rule GenStandardPreferencePage2GenStandardPreferencePage extends GenPreferencePage2GenPreferencePage {
  from
    o : Before!GenStandardPreferencePage
  to
    m : After!GenStandardPreferencePage (
%\highlight%      kind <- o.kind
    )
}
rule GenDiagramPreferences2GenDiagramPreferences {
  from
    o : Before!GenDiagramPreferences
  to
    m : After!GenDiagramPreferences (
%\highlight%      lineStyle <- o.lineStyle,
%\highlight%      defaultFont <- o.defaultFont,
%\highlight%      fontColor <- o.fontColor,
%\highlight%      fillColor <- o.fillColor,
%\highlight%      lineColor <- o.lineColor,
%\highlight%      noteFillColor <- o.noteFillColor,
%\highlight%      noteLineColor <- o.noteLineColor,
%\highlight%      showConnectionHandles <- o.showConnectionHandles,
%\highlight%      showPopupBars <- o.showPopupBars,
%\highlight%      promptOnDelFromModel <- o.promptOnDelFromModel,
%\highlight%      promptOnDelFromDiagram <- o.promptOnDelFromDiagram,
%\highlight%      enableAnimatedLayout <- o.enableAnimatedLayout,
%\highlight%      enableAnimatedZoom <- o.enableAnimatedZoom,
%\highlight%      enableAntiAlias <- o.enableAntiAlias,
%\highlight%      showGrid <- o.showGrid,
%\highlight%      showRulers <- o.showRulers,
%\highlight%      snapToGrid <- o.snapToGrid,
%\highlight%      snapToGeometry <- o.snapToGeometry,
%\highlight%      gridInFront <- o.gridInFront,
%\highlight%      rulerUnits <- o.rulerUnits,
%\highlight%      gridSpacing <- o.gridSpacing,
%\highlight%      gridLineColor <- o.gridLineColor,
%\highlight%      gridLineStyle <- o.gridLineStyle
    )
}
abstract rule GenFont2GenFont {
  from
    o : Before!GenFont
  to
    m : After!GenFont
}
rule GenStandardFont2GenStandardFont extends GenFont2GenFont {
  from
    o : Before!GenStandardFont
  to
    m : After!GenStandardFont (
%\highlight%      name <- o.name
    )
}
rule GenCustomFont2GenCustomFont extends GenFont2GenFont {
  from
    o : Before!GenCustomFont
  to
    m : After!GenCustomFont (
%\highlight%      name <- o.name,
%\highlight%      height <- o.height,
%\highlight%      style <- o.style
    )
}
abstract rule GenColor2GenColor {
  from
    o : Before!GenColor
  to
    m : After!GenColor
}
rule GenRGBColor2GenRGBColor extends GenColor2GenColor {
  from
    o : Before!GenRGBColor
  to
    m : After!GenRGBColor (
%\highlight%      red <- o.red,
%\highlight%      green <- o.green,
%\highlight%      blue <- o.blue
    )
}
rule GenConstantColor2GenConstantColor extends GenColor2GenColor {
  from
    o : Before!GenConstantColor
  to
    m : After!GenConstantColor (
%\highlight%      name <- o.name
    )
}
rule GenDiagramUpdater2GenDiagramUpdater {
  from
    o : Before!GenDiagramUpdater
  to
    m : After!GenDiagramUpdater (
%\highlight%      diagramUpdaterClassName <- o.diagramUpdaterClassName,
%\highlight%      nodeDescriptorClassName <- o.nodeDescriptorClassName,
%\highlight%      linkDescriptorClassName <- o.linkDescriptorClassName,
%\highlight%      updateCommandClassName <- o.updateCommandClassName,
%\highlight%      updateCommandID <- o.updateCommandID
    )
}
rule GenPlugin2GenPlugin {
  from
    o : Before!GenPlugin
  to
    m : After!GenPlugin (
%\highlight%      iD <- o.iD,
%\highlight%      name <- o.name,
%\highlight%      provider <- o.provider,
%\highlight%      version <- o.version,
%\highlight%      printingEnabled <- o.printingEnabled,
%\highlight%      requiredPlugins <- o.requiredPlugins,
%\highlight%      activatorClassName <- o.activatorClassName
    )
}
rule DynamicModelAccess2DynamicModelAccess {
  from
    o : Before!DynamicModelAccess
  to
    m : After!DynamicModelAccess (
%\highlight%      packageName <- o.packageName,
%\highlight%      className <- o.className
    )
}
abstract rule GenCommonBase2GenCommonBase {
  from
    o : Before!GenCommonBase
  to
    m : After!GenCommonBase (
%\highlight%      diagramRunTimeClass <- o.diagramRunTimeClass,
%\highlight%      visualID <- o.visualID,
%\highlight%      elementType <- o.elementType,
%\highlight%      editPartClassName <- o.editPartClassName,
%\highlight%      itemSemanticEditPolicyClassName <- o.itemSemanticEditPolicyClassName,
%\highlight%      notationViewFactoryClassName <- o.notationViewFactoryClassName,
%\highlight%      viewmap <- o.viewmap,
%\highlight%      styles <- o.styles,
%\highlight%      behaviour <- o.behaviour
    )
}
abstract rule Behaviour2Behaviour {
  from
    o : Before!Behaviour
  to
    m : After!Behaviour
}
rule CustomBehaviour2CustomBehaviour extends Behaviour2Behaviour {
  from
    o : Before!CustomBehaviour
  to
    m : After!CustomBehaviour (
%\highlight%      key <- o.key,
%\highlight%      editPolicyQualifiedClassName <- o.editPolicyQualifiedClassName
    )
}
rule SharedBehaviour2SharedBehaviour extends Behaviour2Behaviour {
  from
    o : Before!SharedBehaviour
  to
    m : After!SharedBehaviour (
%\highlight%      delegate <- o.delegate
    )
}
rule OpenDiagramBehaviour2OpenDiagramBehaviour extends Behaviour2Behaviour {
  from
    o : Before!OpenDiagramBehaviour
  to
    m : After!OpenDiagramBehaviour (
%\highlight%      editPolicyClassName <- o.editPolicyClassName,
%\highlight%      diagramKind <- o.diagramKind,
%\highlight%      editorID <- o.editorID,
%\highlight%      openAsEclipseEditor <- o.openAsEclipseEditor
    )
}
abstract rule GenContainerBase2GenContainerBase extends GenCommonBase2GenCommonBase {
  from
    o : Before!GenContainerBase
  to
    m : After!GenContainerBase (
%\highlight%      canonicalEditPolicyClassName <- o.canonicalEditPolicyClassName
    )
}
abstract rule GenChildContainer2GenChildContainer extends GenContainerBase2GenContainerBase {
  from
    o : Before!GenChildContainer
  to
    m : After!GenChildContainer (
%\highlight%      childNodes <- o.childNodes
    )
}
abstract rule GenNode2GenNode extends GenChildContainer2GenChildContainer {
  from
    o : Before!GenNode
  to
    m : After!GenNode (
%\highlight%      modelFacet <- o.modelFacet,
%\highlight%      labels <- o.labels,
%\highlight%      compartments <- o.compartments,
%\highlight%      primaryDragEditPolicyQualifiedClassName <- o.primaryDragEditPolicyQualifiedClassName,
%\highlight%      graphicalNodeEditPolicyClassName <- o.graphicalNodeEditPolicyClassName,
%\highlight%      createCommandClassName <- o.createCommandClassName
    )
}
rule GenTopLevelNode2GenTopLevelNode extends GenNode2GenNode {
  from
    o : Before!GenTopLevelNode
  to
    m : After!GenTopLevelNode
}
rule GenChildNode2GenChildNode extends GenNode2GenNode {
  from
    o : Before!GenChildNode
  to
    m : After!GenChildNode
}
rule GenChildSideAffixedNode2GenChildSideAffixedNode extends GenChildNode2GenChildNode {
  from
    o : Before!GenChildSideAffixedNode
  to
    m : After!GenChildSideAffixedNode (
%\highlight%      preferredSideName <- o.preferredSideName
    )
}
rule GenChildLabelNode2GenChildLabelNode extends GenChildNode2GenChildNode {
  from
    o : Before!GenChildLabelNode
  to
    m : After!GenChildLabelNode (
%\highlight%      labelReadOnly <- o.labelReadOnly,
%\highlight%      labelElementIcon <- o.labelElementIcon,
%\highlight%      labelModelFacet <- o.labelModelFacet
    )
}
rule GenCompartment2GenCompartment extends GenChildContainer2GenChildContainer {
  from
    o : Before!GenCompartment
  to
    m : After!GenCompartment (
%\highlight%      title <- o.title,
%\highlight%      canCollapse <- o.canCollapse,
%\highlight%      hideIfEmpty <- o.hideIfEmpty,
%\highlight%      needsTitle <- o.needsTitle,
%\highlight%      node <- o.node,
%\highlight%      listLayout <- o.listLayout
    )
}
rule GenLink2GenLink extends GenCommonBase2GenCommonBase {
  from
    o : Before!GenLink
  to
    m : After!GenLink (
%\highlight%      modelFacet <- o.modelFacet,
%\highlight%      labels <- o.labels,
%\highlight%      outgoingCreationAllowed <- o.outgoingCreationAllowed,
%\highlight%      incomingCreationAllowed <- o.incomingCreationAllowed,
%\highlight%      viewDirectionAlignedWithModel <- o.viewDirectionAlignedWithModel,
%\highlight%      creationConstraints <- o.creationConstraints,
%\highlight%      createCommandClassName <- o.createCommandClassName,
%\highlight%      reorientCommandClassName <- o.reorientCommandClassName,
%\highlight%      treeBranch <- o.treeBranch
    )
}
abstract rule GenLabel2GenLabel extends GenCommonBase2GenCommonBase {
  from
    o : Before!GenLabel
  to
    m : After!GenLabel (
%\highlight%      readOnly <- o.readOnly,
%\highlight%      elementIcon <- o.elementIcon,
%\highlight%      modelFacet <- o.modelFacet
    )
}
rule GenNodeLabel2GenNodeLabel extends GenLabel2GenLabel {
  from
    o : Before!GenNodeLabel
  to
    m : After!GenNodeLabel
}
rule GenExternalNodeLabel2GenExternalNodeLabel extends GenNodeLabel2GenNodeLabel {
  from
    o : Before!GenExternalNodeLabel
  to
    m : After!GenExternalNodeLabel
}
rule GenLinkLabel2GenLinkLabel extends GenLabel2GenLabel {
  from
    o : Before!GenLinkLabel
  to
    m : After!GenLinkLabel (
%\highlight%      link <- o.link,
%\highlight%      alignment <- o.alignment
    )
}
abstract rule ElementType2ElementType {
  from
    o : Before!ElementType
  to
    m : After!ElementType (
%\highlight%      diagramElement <- o.diagramElement,
%\highlight%      uniqueIdentifier <- o.uniqueIdentifier,
%\highlight%      displayName <- o.displayName,
%\highlight%      definedExternally <- o.definedExternally
    )
}
rule MetamodelType2MetamodelType extends ElementType2ElementType {
  from
    o : Before!MetamodelType
  to
    m : After!MetamodelType (
%\highlight%      editHelperClassName <- o.editHelperClassName
    )
}
rule SpecializationType2SpecializationType extends ElementType2ElementType {
  from
    o : Before!SpecializationType
  to
    m : After!SpecializationType (
%\highlight%      metamodelType <- o.metamodelType,
%\highlight%      editHelperAdviceClassName <- o.editHelperAdviceClassName
    )
}
rule NotationType2NotationType extends ElementType2ElementType {
  from
    o : Before!NotationType
  to
    m : After!NotationType
}
abstract rule ModelFacet2ModelFacet {
  from
    o : Before!ModelFacet
  to
    m : After!ModelFacet
}
abstract rule LinkModelFacet2LinkModelFacet extends ModelFacet2ModelFacet {
  from
    o : Before!LinkModelFacet
  to
    m : After!LinkModelFacet
}
abstract rule LabelModelFacet2LabelModelFacet extends ModelFacet2ModelFacet {
  from
    o : Before!LabelModelFacet
  to
    m : After!LabelModelFacet
}
rule TypeModelFacet2TypeModelFacet extends ModelFacet2ModelFacet {
  from
    o : Before!TypeModelFacet
  to
    m : After!TypeModelFacet (
%\highlight%      metaClass <- o.metaClass,
%\highlight%      containmentMetaFeature <- o.containmentMetaFeature,
%\highlight%      childMetaFeature <- o.childMetaFeature,
%\highlight%      modelElementSelector <- o.modelElementSelector,
%\highlight%      modelElementInitializer <- o.modelElementInitializer
    )
}
rule TypeLinkModelFacet2TypeLinkModelFacet extends TypeModelFacet2TypeModelFacet {
  from
    o : Before!TypeLinkModelFacet
  to
    m : After!TypeLinkModelFacet (
%\highlight%      sourceMetaFeature <- o.sourceMetaFeature,
%\highlight%      targetMetaFeature <- o.targetMetaFeature
    )
}
rule FeatureLinkModelFacet2FeatureLinkModelFacet extends LinkModelFacet2LinkModelFacet {
  from
    o : Before!FeatureLinkModelFacet
  to
    m : After!FeatureLinkModelFacet (
%\highlight%      metaFeature <- o.metaFeature
    )
}
rule FeatureLabelModelFacet2FeatureLabelModelFacet extends LabelModelFacet2LabelModelFacet {
  from
    o : Before!FeatureLabelModelFacet
  to
    m : After!FeatureLabelModelFacet (
%\highlight%      metaFeatures <- o.metaFeatures,
%\highlight%      viewPattern <- o.viewPattern,
%\highlight%      editorPattern <- o.editorPattern,
%\highlight%      editPattern <- o.editPattern,
%\highlight%      viewMethod <- o.viewMethod,
%\highlight%      editMethod <- o.editMethod
    )
}
rule DesignLabelModelFacet2DesignLabelModelFacet extends LabelModelFacet2LabelModelFacet {
  from
    o : Before!DesignLabelModelFacet
  to
    m : After!DesignLabelModelFacet
}
abstract rule Attributes2Attributes {
  from
    o : Before!Attributes
  to
    m : After!Attributes
}
rule ColorAttributes2ColorAttributes extends Attributes2Attributes {
  from
    o : Before!ColorAttributes
  to
    m : After!ColorAttributes (
%\highlight%      foregroundColor <- o.foregroundColor,
%\highlight%      backgroundColor <- o.backgroundColor
    )
}
rule StyleAttributes2StyleAttributes extends Attributes2Attributes {
  from
    o : Before!StyleAttributes
  to
    m : After!StyleAttributes (
%\highlight%      fixedFont <- o.fixedFont,
%\highlight%      fixedForeground <- o.fixedForeground,
%\highlight%      fixedBackground <- o.fixedBackground
    )
}
rule ResizeConstraints2ResizeConstraints extends Attributes2Attributes {
  from
    o : Before!ResizeConstraints
  to
    m : After!ResizeConstraints (
%\highlight%      resizeHandles <- o.resizeHandles,
%\highlight%      nonResizeHandles <- o.nonResizeHandles
    )
}
rule DefaultSizeAttributes2DefaultSizeAttributes extends Attributes2Attributes {
  from
    o : Before!DefaultSizeAttributes
  to
    m : After!DefaultSizeAttributes (
%\highlight%      width <- o.width,
%\highlight%      height <- o.height
    )
}
rule LabelOffsetAttributes2LabelOffsetAttributes extends Attributes2Attributes {
  from
    o : Before!LabelOffsetAttributes
  to
    m : After!LabelOffsetAttributes (
%\highlight%      x <- o.x,
%\highlight%      y <- o.y
    )
}
abstract rule Viewmap2Viewmap {
  from
    o : Before!Viewmap
  to
    m : After!Viewmap (
%\highlight%      attributes <- o.attributes,
%\highlight%      requiredPluginIDs <- o.requiredPluginIDs,
%\highlight%      layoutType <- o.layoutType
    )
}
rule FigureViewmap2FigureViewmap extends Viewmap2Viewmap {
  from
    o : Before!FigureViewmap
  to
    m : After!FigureViewmap (
%\highlight%      figureQualifiedClassName <- o.figureQualifiedClassName
    )
}
rule SnippetViewmap2SnippetViewmap extends Viewmap2Viewmap {
  from
    o : Before!SnippetViewmap
  to
    m : After!SnippetViewmap (
%\highlight%      body <- o.body
    )
}
rule InnerClassViewmap2InnerClassViewmap extends Viewmap2Viewmap {
  from
    o : Before!InnerClassViewmap
  to
    m : After!InnerClassViewmap (
%\highlight%      className <- o.className,
%\highlight%      classBody <- o.classBody
    )
}
rule ParentAssignedViewmap2ParentAssignedViewmap extends Viewmap2Viewmap {
  from
    o : Before!ParentAssignedViewmap
  to
    m : After!ParentAssignedViewmap (
%\highlight%      getterName <- o.getterName,
%\highlight%      setterName <- o.setterName,
%\highlight%      figureQualifiedClassName <- o.figureQualifiedClassName
    )
}
rule ValueExpression2ValueExpression {
  from
    o : Before!ValueExpression
  to
    m : After!ValueExpression (
%\highlight%      body <- o.body
    )
}
rule GenConstraint2GenConstraint extends ValueExpression2ValueExpression {
  from
    o : Before!GenConstraint
  to
    m : After!GenConstraint
}
rule Palette2Palette {
  from
    o : Before!Palette
  to
    m : After!Palette (
%\highlight%      flyout <- o.flyout,
%\highlight%      groups <- o.groups,
%\highlight%      packageName <- o.packageName,
%\highlight%      factoryClassName <- o.factoryClassName
    )
}
abstract rule EntryBase2EntryBase {
  from
    o : Before!EntryBase
  to
    m : After!EntryBase (
%\highlight%      title <- o.title,
%\highlight%      description <- o.description,
%\highlight%      largeIconPath <- o.largeIconPath,
%\highlight%      smallIconPath <- o.smallIconPath,
%\highlight%      createMethodName <- o.createMethodName
    )
}
abstract rule AbstractToolEntry2AbstractToolEntry extends EntryBase2EntryBase {
  from
    o : Before!AbstractToolEntry
  to
    m : After!AbstractToolEntry (
%\highlight%      default <- o.default,
%\highlight%      qualifiedToolName <- o.qualifiedToolName,
%\highlight%      properties <- o.properties
    )
}
rule ToolEntry2ToolEntry extends AbstractToolEntry2AbstractToolEntry {
  from
    o : Before!ToolEntry
  to
    m : After!ToolEntry (
%\highlight%      genNodes <- o.genNodes,
%\highlight%      genLinks <- o.genLinks
    )
}
rule StandardEntry2StandardEntry extends AbstractToolEntry2AbstractToolEntry {
  from
    o : Before!StandardEntry
  to
    m : After!StandardEntry (
%\highlight%      kind <- o.kind
    )
}
abstract rule ToolGroupItem2ToolGroupItem {
  from
    o : Before!ToolGroupItem
  to
    m : After!ToolGroupItem
}
rule Separator2Separator extends ToolGroupItem2ToolGroupItem {
  from
    o : Before!Separator
  to
    m : After!Separator
}
rule ToolGroup2ToolGroup extends EntryBase2EntryBase {
  from
    o : Before!ToolGroup
  to
    m : After!ToolGroup (
%\highlight%      palette <- o.palette,
%\highlight%      stack <- o.stack,
%\highlight%      collapse <- o.collapse,
%\highlight%      entries <- o.entries
    )
}
abstract rule GenElementInitializer2GenElementInitializer {
  from
    o : Before!GenElementInitializer
  to
    m : After!GenElementInitializer
}
rule GenFeatureSeqInitializer2GenFeatureSeqInitializer extends GenElementInitializer2GenElementInitializer {
  from
    o : Before!GenFeatureSeqInitializer
  to
    m : After!GenFeatureSeqInitializer (
%\highlight%      initializers <- o.initializers,
%\highlight%      elementClass <- o.elementClass
    )
}
rule GenFeatureValueSpec2GenFeatureValueSpec extends GenFeatureInitializer2GenFeatureInitializer {
  from
    o : Before!GenFeatureValueSpec
  to
    m : After!GenFeatureValueSpec (
%\highlight%      value <- o.value
    )
}
rule GenReferenceNewElementSpec2GenReferenceNewElementSpec extends GenFeatureInitializer2GenFeatureInitializer {
  from
    o : Before!GenReferenceNewElementSpec
  to
    m : After!GenReferenceNewElementSpec (
%\highlight%      newElementInitializers <- o.newElementInitializers
    )
}
abstract rule GenFeatureInitializer2GenFeatureInitializer {
  from
    o : Before!GenFeatureInitializer
  to
    m : After!GenFeatureInitializer (
%\highlight%      feature <- o.feature
    )
}
rule GenLinkConstraints2GenLinkConstraints {
  from
    o : Before!GenLinkConstraints
  to
    m : After!GenLinkConstraints (
%\highlight%      link <- o.link,
%\highlight%      sourceEnd <- o.sourceEnd,
%\highlight%      targetEnd <- o.targetEnd
    )
}
rule GenAuditRoot2GenAuditRoot {
  from
    o : Before!GenAuditRoot
  to
    m : After!GenAuditRoot (
%\highlight%      categories <- o.categories,
%\highlight%      rules <- o.rules,
%\highlight%      clientContexts <- o.clientContexts
    )
}
rule GenAuditContainer2GenAuditContainer {
  from
    o : Before!GenAuditContainer
  to
    m : After!GenAuditContainer (
%\highlight%      id <- o.id,
%\highlight%      name <- o.name,
%\highlight%      description <- o.description,
%\highlight%      path <- o.path,
%\highlight%      audits <- o.audits
    )
}
abstract rule GenRuleBase2GenRuleBase {
  from
    o : Before!GenRuleBase
  to
    m : After!GenRuleBase (
%\highlight%      name <- o.name,
%\highlight%      description <- o.description
    )
}
rule GenAuditRule2GenAuditRule extends GenRuleBase2GenRuleBase {
  from
    o : Before!GenAuditRule
  to
    m : After!GenAuditRule (
%\highlight%      id <- o.id,
%\highlight%      rule <- o.rule,
%\highlight%      target <- o.target,
%\highlight%      message <- o.message,
%\highlight%      severity <- o.severity,
%\highlight%      useInLiveMode <- o.useInLiveMode,
%\highlight%      category <- o.category
    )
}
abstract rule GenRuleTarget2GenRuleTarget {
  from
    o : Before!GenRuleTarget
  to
    m : After!GenRuleTarget
}
rule GenDomainElementTarget2GenDomainElementTarget extends GenAuditable2GenAuditable {
  from
    o : Before!GenDomainElementTarget
  to
    m : After!GenDomainElementTarget (
%\highlight%      element <- o.element
    )
}
rule GenDiagramElementTarget2GenDiagramElementTarget extends GenAuditable2GenAuditable {
  from
    o : Before!GenDiagramElementTarget
  to
    m : After!GenDiagramElementTarget (
%\highlight%      element <- o.element
    )
}
rule GenDomainAttributeTarget2GenDomainAttributeTarget extends GenAuditable2GenAuditable {
  from
    o : Before!GenDomainAttributeTarget
  to
    m : After!GenDomainAttributeTarget (
%\highlight%      attribute <- o.attribute,
%\highlight%      nullAsError <- o.nullAsError
    )
}
rule GenNotationElementTarget2GenNotationElementTarget extends GenAuditable2GenAuditable {
  from
    o : Before!GenNotationElementTarget
  to
    m : After!GenNotationElementTarget (
%\highlight%      element <- o.element
    )
}
rule GenMetricContainer2GenMetricContainer {
  from
    o : Before!GenMetricContainer
  to
    m : After!GenMetricContainer (
%\highlight%      metrics <- o.metrics
    )
}
rule GenMetricRule2GenMetricRule extends GenRuleBase2GenRuleBase {
  from
    o : Before!GenMetricRule
  to
    m : After!GenMetricRule (
%\highlight%      key <- o.key,
%\highlight%      rule <- o.rule,
%\highlight%      target <- o.target,
%\highlight%      lowLimit <- o.lowLimit,
%\highlight%      highLimit <- o.highLimit,
%\highlight%      container <- o.container
    )
}
rule GenAuditedMetricTarget2GenAuditedMetricTarget extends GenAuditable2GenAuditable {
  from
    o : Before!GenAuditedMetricTarget
  to
    m : After!GenAuditedMetricTarget (
%\highlight%      metric <- o.metric,
%\highlight%      metricValueContext <- o.metricValueContext
    )
}
abstract rule GenAuditable2GenAuditable extends GenRuleTarget2GenRuleTarget {
  from
    o : Before!GenAuditable
  to
    m : After!GenAuditable (
%\highlight%      contextSelector <- o.contextSelector
    )
}
rule GenAuditContext2GenAuditContext {
  from
    o : Before!GenAuditContext
  to
    m : After!GenAuditContext (
%\highlight%      root <- o.root,
%\highlight%      id <- o.id,
%\highlight%      className <- o.className,
%\highlight%      ruleTargets <- o.ruleTargets
    )
}
abstract rule GenMeasurable2GenMeasurable extends GenRuleTarget2GenRuleTarget {
  from
    o : Before!GenMeasurable
  to
    m : After!GenMeasurable
}
rule GenExpressionProviderContainer2GenExpressionProviderContainer {
  from
    o : Before!GenExpressionProviderContainer
  to
    m : After!GenExpressionProviderContainer (
%\highlight%      expressionsPackageName <- o.expressionsPackageName,
%\highlight%      abstractExpressionClassName <- o.abstractExpressionClassName,
%\highlight%      providers <- o.providers
    )
}
abstract rule GenExpressionProviderBase2GenExpressionProviderBase {
  from
    o : Before!GenExpressionProviderBase
  to
    m : After!GenExpressionProviderBase (
%\highlight%      expressions <- o.expressions
    )
}
rule GenJavaExpressionProvider2GenJavaExpressionProvider extends GenExpressionProviderBase2GenExpressionProviderBase {
  from
    o : Before!GenJavaExpressionProvider
  to
    m : After!GenJavaExpressionProvider (
%\highlight%      throwException <- o.throwException,
%\highlight%      injectExpressionBody <- o.injectExpressionBody
    )
}
rule GenExpressionInterpreter2GenExpressionInterpreter extends GenExpressionProviderBase2GenExpressionProviderBase {
  from
    o : Before!GenExpressionInterpreter
  to
    m : After!GenExpressionInterpreter (
%\highlight%      language <- o.language,
%\highlight%      className <- o.className
    )
}
abstract rule GenDomainModelNavigator2GenDomainModelNavigator {
  from
    o : Before!GenDomainModelNavigator
  to
    m : After!GenDomainModelNavigator (
%\highlight%      generateDomainModelNavigator <- o.generateDomainModelNavigator,
%\highlight%      domainContentExtensionID <- o.domainContentExtensionID,
%\highlight%      domainContentExtensionName <- o.domainContentExtensionName,
%\highlight%      domainContentExtensionPriority <- o.domainContentExtensionPriority,
%\highlight%      domainContentProviderClassName <- o.domainContentProviderClassName,
%\highlight%      domainLabelProviderClassName <- o.domainLabelProviderClassName,
%\highlight%      domainModelElementTesterClassName <- o.domainModelElementTesterClassName,
%\highlight%      domainNavigatorItemClassName <- o.domainNavigatorItemClassName
    )
}
rule GenNavigator2GenNavigator extends GenDomainModelNavigator2GenDomainModelNavigator {
  from
    o : Before!GenNavigator
  to
    m : After!GenNavigator (
%\highlight%      contentExtensionID <- o.contentExtensionID,
%\highlight%      contentExtensionName <- o.contentExtensionName,
%\highlight%      contentExtensionPriority <- o.contentExtensionPriority,
%\highlight%      linkHelperExtensionID <- o.linkHelperExtensionID,
%\highlight%      sorterExtensionID <- o.sorterExtensionID,
%\highlight%      actionProviderID <- o.actionProviderID,
%\highlight%      contentProviderClassName <- o.contentProviderClassName,
%\highlight%      labelProviderClassName <- o.labelProviderClassName,
%\highlight%      linkHelperClassName <- o.linkHelperClassName,
%\highlight%      sorterClassName <- o.sorterClassName,
%\highlight%      actionProviderClassName <- o.actionProviderClassName,
%\highlight%      abstractNavigatorItemClassName <- o.abstractNavigatorItemClassName,
%\highlight%      navigatorGroupClassName <- o.navigatorGroupClassName,
%\highlight%      navigatorItemClassName <- o.navigatorItemClassName,
%\highlight%      uriInputTesterClassName <- o.uriInputTesterClassName,
%\highlight%      packageName <- o.packageName,
%\highlight%      childReferences <- o.childReferences
    )
}
rule GenNavigatorChildReference2GenNavigatorChildReference {
  from
    o : Before!GenNavigatorChildReference
  to
    m : After!GenNavigatorChildReference (
%\highlight%      parent <- o.parent,
%\highlight%      child <- o.child,
%\highlight%      referenceType <- o.referenceType,
%\highlight%      groupName <- o.groupName,
%\highlight%      groupIcon <- o.groupIcon,
%\highlight%      hideIfEmpty <- o.hideIfEmpty
    )
}
rule GenNavigatorPath2GenNavigatorPath {
  from
    o : Before!GenNavigatorPath
  to
    m : After!GenNavigatorPath (
%\highlight%      segments <- o.segments
    )
}
rule GenNavigatorPathSegment2GenNavigatorPathSegment {
  from
    o : Before!GenNavigatorPathSegment
  to
    m : After!GenNavigatorPathSegment (
%\highlight%      from <- o.from,
%\highlight%      to <- o.to
    )
}
rule GenPropertySheet2GenPropertySheet {
  from
    o : Before!GenPropertySheet
  to
    m : After!GenPropertySheet (
%\highlight%      tabs <- o.tabs,
%\highlight%      packageName <- o.packageName,
%\highlight%      readOnly <- o.readOnly,
%\highlight%      needsCaption <- o.needsCaption,
%\highlight%      labelProviderClassName <- o.labelProviderClassName
    )
}
abstract rule GenPropertyTab2GenPropertyTab {
  from
    o : Before!GenPropertyTab
  to
    m : After!GenPropertyTab (
%\highlight%      iD <- o.iD,
%\highlight%      label <- o.label
    )
}
rule GenStandardPropertyTab2GenStandardPropertyTab extends GenPropertyTab2GenPropertyTab {
  from
    o : Before!GenStandardPropertyTab
  to
    m : After!GenStandardPropertyTab
}
rule GenCustomPropertyTab2GenCustomPropertyTab extends GenPropertyTab2GenPropertyTab {
  from
    o : Before!GenCustomPropertyTab
  to
    m : After!GenCustomPropertyTab (
%\highlight%      className <- o.className,
%\highlight%      filter <- o.filter
    )
}
abstract rule GenPropertyTabFilter2GenPropertyTabFilter {
  from
    o : Before!GenPropertyTabFilter
  to
    m : After!GenPropertyTabFilter
}
rule TypeTabFilter2TypeTabFilter extends GenPropertyTabFilter2GenPropertyTabFilter {
  from
    o : Before!TypeTabFilter
  to
    m : After!TypeTabFilter (
%\highlight%      types <- o.types,
%\highlight%      generatedTypes <- o.generatedTypes
    )
}
rule CustomTabFilter2CustomTabFilter extends GenPropertyTabFilter2GenPropertyTabFilter {
  from
    o : Before!CustomTabFilter
  to
    m : After!CustomTabFilter (
%\highlight%      className <- o.className
    )
}
abstract rule GenContributionItem2GenContributionItem {
  from
    o : Before!GenContributionItem
  to
    m : After!GenContributionItem
}
rule GenSharedContributionItem2GenSharedContributionItem extends GenContributionItem2GenContributionItem {
  from
    o : Before!GenSharedContributionItem
  to
    m : After!GenSharedContributionItem (
%\highlight%      actualItem <- o.actualItem
    )
}
rule GenGroupMarker2GenGroupMarker extends GenContributionItem2GenContributionItem {
  from
    o : Before!GenGroupMarker
  to
    m : After!GenGroupMarker (
%\highlight%      groupName <- o.groupName
    )
}
rule GenSeparator2GenSeparator extends GenContributionItem2GenContributionItem {
  from
    o : Before!GenSeparator
  to
    m : After!GenSeparator (
%\highlight%      groupName <- o.groupName
    )
}
rule GenActionFactoryContributionItem2GenActionFactoryContributionItem extends GenContributionItem2GenContributionItem {
  from
    o : Before!GenActionFactoryContributionItem
  to
    m : After!GenActionFactoryContributionItem (
%\highlight%      name <- o.name
    )
}
abstract rule GenContributionManager2GenContributionManager extends GenContributionItem2GenContributionItem {
  from
    o : Before!GenContributionManager
  to
    m : After!GenContributionManager (
%\highlight%      iD <- o.iD,
%\highlight%      items <- o.items
    )
}
rule GenMenuManager2GenMenuManager extends GenContributionManager2GenContributionManager {
  from
    o : Before!GenMenuManager
  to
    m : After!GenMenuManager (
%\highlight%      name <- o.name
    )
}
rule GenToolBarManager2GenToolBarManager extends GenContributionManager2GenContributionManager {
  from
    o : Before!GenToolBarManager
  to
    m : After!GenToolBarManager
}
rule GenApplication2GenApplication {
  from
    o : Before!GenApplication
  to
    m : After!GenApplication (
%\highlight%      iD <- o.iD,
%\highlight%      title <- o.title,
%\highlight%      packageName <- o.packageName,
%\highlight%      className <- o.className,
%\highlight%      perspectiveId <- o.perspectiveId,
%\highlight%      supportFiles <- o.supportFiles,
%\highlight%      sharedContributionItems <- o.sharedContributionItems,
%\highlight%      mainMenu <- o.mainMenu,
%\highlight%      mainToolBar <- o.mainToolBar
    )
}