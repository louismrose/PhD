module PetriNets;

create Migrated : After from Original : Before;

rule Nets {
	from
		o : Before!Net
	to
		m : After!Net (
			places <- o.places,
			transitions <- o.transitions
		)
}

rule Places {
	from
		o : Before!Place
	to
		m : After!Place (
			name <- o.name
		)
}

rule Transitions {
	from
		o : Before!Transition
	to
		m : After!Transition (
			name <- o.name,
			"in" <- o.src->collect(p | thisModule.PTArcs(p,o)),
			out  <- o.dst->collect(p | thisModule.TPArcs(o,p))
		)
}

lazy rule PTArcs {
	from
		place       : Before!Place,
		destination : Before!Transition
	to
		ptarcs : After!PTArc (
			src <- place,
			dst <- destination,
			net <- destination.net
		)
}

lazy rule TPArcs {
	from
		transition  : Before!Transition,
		destination : Before!Place
	to
		tparcs : After!TPArc (
			src <- transition,
			dst <- destination,
			net <- transition.net
		)
}