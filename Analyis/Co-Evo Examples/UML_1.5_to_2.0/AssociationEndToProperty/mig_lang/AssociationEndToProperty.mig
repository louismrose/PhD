migrate Association {
	migrated.memberEnds := original.connections.equivalent();
}

migrate Class {
	var features := original.features.equivalent();

	migrated.operations := features.select(f|f.isKindOf(Migrated!Operation));

	migrated.attributes := features.select(f|f.isKindOf(Migrated!Property));
	migrated.attributes.addAll(original.associations.equivalent());
}

delete StructuralFeature when: original.targetScope = ScopeKind#classifier

retype Attribute to Property
retype AssociationEnd to Property

migrate StructuralFeature {
	if (original.ownerScope = ScopeKind#classifier) {
		migrated.isStatic = true;		
	}
}

migrate AssociationEnd {
	if (original.isNavigable) {
		original.association.equivalent().navigableEnds.add(migrated);
	}
}