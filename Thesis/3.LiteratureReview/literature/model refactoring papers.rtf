{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf290
{\fonttbl\f0\fnil\fcharset0 Verdana;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth20060\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640

\itap2\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth20060\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap2\pardeftab720\sa260\ql\qnatural

\f0\fs26 \cf0 Taken from EWL paper:\
In [15], an approach to expressing model refactorings as update transformations is described. There, similarly to our approach, update transformations are expressed as guarded actions. The main difference with our approach is that it does not consider user input. To our view this is somewhat limiting as user input has been shown to be necessary for achieving certain kinds of transformations such as the class renaming example presented in Section 5. Moreover, it is not clear that the language can be used to capture wizards with complex applicability criteria, such as the one presented in Section 5, since the examples presented there address wizards that apply to a single model element only.\
In [16], the authors propose a graphical approach to defining update transformations targeting the Eclipse Modeling Framework. The transformations can then be interpreted using the AGG graph transformation engine [17] or compiled to Java.\
The transformation language proposed in this tool [16] is rather simple and in absence of a proper query language (e.g. OCL), it is not clear how it can be used for complex scenarios such as the one demonstrated in Listing 7. In [18], a set of refactorings on UML models is proposed and specified using OCL pre and post conditions. The paper refers only to specifications and not implementations, and there is no mechanism for executing them to perform the refactorings automatically.\nestcell \lastrow\nestrow
\pard\intbl\itap1\pardeftab720\sa260\ql\qnatural
\cf0 \
\
\

\itap2\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth20060\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap2\pardeftab720\sa260\ql\qnatural
\cf0 [15] Ivan Porres. Model Refactorings as Rule-Based Update Transformations. In Perdita Stevens and Jon Whittle and Grady Booch, editor, 
\i Proc. UML 2003 - The Unified Modeling Language, 6th International Conference
\i0 , volume 2863 of LNCS, pages 159\'96174. Springer-Verlag, 2003.\nestcell \lastrow\nestrow
\pard\intbl\itap1\pardeftab720\sa260\ql\qnatural
\cf0 [16] E. Biermann, K. Ehrig, C. Khler, G. Kuhns, G. Taentzer, and E. Weiss. EMF Model Refactoring based on Graph Transformation Concepts. In 
\i Proc. Third International Workshop on Software Evolution through Transformations (SETra\'9206)
\i0 , volume 3, Natal, Brazil, September 2006.\
[17] Gabriele Taentzer. AGG: A Tool Environment for Algebraic Graph Transformation. In 
\i Proc. Applications of Graph Transformations with Industrial Relevance
\i0 , AGTIVE, page 481, September 1999.\
[18] Gerson Suny\'e9, Damien Pollet, Yves Le Traon, Jean-Marc J\'e9z\'e9quel. Refactoring UML Models. In 
\i Proc. Int\'92l Conf. UML 2001 - The Unified Modeling Language: Modeling Languages, Concepts, and Tools
\i0 , volume 2185 of LNCS, pages 134\'96148. Springer-Verlag, 2001.\cell \lastrow\row
}