rule Newsgroup2Newsgroup
	transform o : Original!Newsgroup
	to        m : Migrated!Newsgroup {

	m.articles := o.articles.equivalent();
}

rule Article2Article
	transform o : Original!Article
	to        m : Migrated!Article {
	
	m.articleId  := o.articleId;
	m.subject    := o.subject;
	m.newsgroups := o.newsgroups;
	m.inReplyTo  := o.inReplyTo;
	m.date       := o.date;
	
	m.sender := o.sender.toPerson();
}

operation String toPerson() : Migrated!Person {
	var person := new Migrated!Person;

	if ('('.isSubstringOf(self)) { -- format is xy@z.com (name)
		person.email := self.split('\\(').first.trim();
		person.name  := self.split('\\(').last.trim('(', ')');
	
	} else if ('<'.isSubstringOf(self)){ -- format is name <xy@z.com> or "name" <xy@z.com>
		person.name  := self.split('<').first.trim('"', '"');
		person.email := self.split('<').last.trim('<', '>');
	}
		
	return person;
}

operation String trim(start : String, end : String) : String {
	var result := self.trim();
	
	if (result.startsWith(start)) {
		result := result.substring(1);
	}
	
	if (result.endsWith(end)) {
		result := result.substring(0, result.length()-1);
	}
	
	return result;
}